{"version":3,"sources":["Flashcard.js","FlashcardList.js","App.js","index.js"],"names":["Flashcard","flashcard","useState","flip","setFlip","backEl","useRef","className","onClick","question","options","map","option","key","ref","answer","FlashcardList","flashcards","id","App","setFlashcards","categoryEl","amountRef","categories","setCategories","decodeString","str","textArea","document","createElement","innerHTML","value","handleSubmit","e","preventDefault","axios","get","params","amount","current","category","then","res","data","results","questionItem","index","correct_answer","incorrect_answers","a","Date","now","sort","Math","random","useEffect","trivia_categories","onSubmit","htmlFor","name","type","min","step","defaultValue","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d44b91b4.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\n\nexport default function Flashcard({flashcard}) {\n    const [flip, setFlip] = useState(false);\n    const [height, setHeight] = useState('initial');\n\n    const frontEl = useRef();\n    const backEl = useRef();\n\n    return (\n        <div \n            className={`card ${flip ? 'flip' : ''}`}\n            onClick={() => setFlip(!flip)}\n        >\n            <div className=\"front\">\n                {flashcard.question}\n                <div className=\"flashcard-options\">\n                    {flashcard.options.map(option => {\n                        return <div className=\"flashcard-option\" key={option}>{option}</div>\n                    })}\n                </div>\n            </div>\n            <div className=\"back\" ref={backEl}>{flashcard.answer}</div>\n        </div>\n    )\n}\n\n\n","import React from 'react'\nimport Flashcard from './Flashcard'\n\nexport default function FlashcardList({flashcards}) {\n    return (\n        <div className=\"card-grid\">\n            {flashcards.map(flashcard => {\n                return <Flashcard flashcard={flashcard} key={Flashcard.id} />\n            })}\n        </div>\n    )\n}\n","import React, {useState, useEffect, useRef} from 'react';\nimport FlashcardList from './FlashcardList';\nimport './app.css';\nimport axios from 'axios';\n \nfunction App() {\n  const [flashcards, setFlashcards] = useState([]);\n  const categoryEl = useRef();\n  const amountRef = useRef()\n  const [categories, setCategories] = useState([])\n\n  useEffect(() => {\n    axios.get('https://opentdb.com/api_category.php')\n    .then(res => {\n      setCategories(res.data.trivia_categories)\n    })\n  }, [])\n\n  useEffect(() => {\n    axios\n      .get('https://opentdb.com/api.php?amount=10')\n      .then(res => {\n        setFlashcards(res.data.results.map((questionItem, index) => {\n          const answer = decodeString(questionItem.correct_answer)\n          const options = [...questionItem.incorrect_answers.map(a => decodeString(a))\n            , answer]\n          return {\n            id: `${index}-${Date.now()}`,\n            question: decodeString(questionItem.question),\n            answer: answer,\n            options: options.sort(() => Math.random() - .5)\n          }\n        }))\n        \n      })\n  }, [])\n\n  function decodeString(str) {\n    const textArea = document.createElement('textarea')\n    textArea.innerHTML = str\n    return textArea.value\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    axios\n      .get('https://opentdb.com/api.php',\n        {params: {\n          amount: amountRef.current.value,\n          category: categoryEl.current.value\n        }\n        })\n      .then(res => {\n        setFlashcards(res.data.results.map((questionItem, index) => {\n          const answer = decodeString(questionItem.correct_answer)\n          const options = [...questionItem.incorrect_answers.map(a => decodeString(a))\n            , answer]\n          return {\n            id: `${index}-${Date.now()}`,\n            question: decodeString(questionItem.question),\n            answer: answer,\n            options: options.sort(() => Math.random() - .5)\n          }\n        }))\n        \n      })\n  }\n  return (\n    <>\n    <form className=\"header\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"category\">Category</label>\n        <select name=\"category\" id=\"category\" ref={categoryEl}>\n          {categories.map(category => {\n            return <option value={category.id} key={category.id}>{category.name}</option>\n          })}\n        </select>\n      </div>\n    </form>\n    <form className=\"header\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"category\"># of Questions</label>\n        <input type=\"number\" id=\"amount\" min=\"1\" step=\"1\" defaultValue={10} ref={amountRef} />\n      </div>\n      <div className=\"form-group\">\n        <button className=\"btn\">Generate</button>\n      </div>\n    </form>\n    <div className=\"container\">\n    <FlashcardList flashcards={flashcards} />\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}